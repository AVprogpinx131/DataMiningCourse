from scipy.spatial.distance import directed_hausdorff
import numpy as np
import pandas as pd

buildings = [
    np.array([[536298.09,6584584.51],[536329.73,6584599.74],[536320.39,6584619.06],[536302.55,6584610.43],[536304.01,6584607.45],[536290.32,6584600.83],[536298.09,6584584.51]]),
    np.array([[536359.32,6584640.26],[536359.32,6584640.25],[536355.31,6584638.34],[536356.67,6584635.36],[536354.22,6584634.2],[536353.54,6584635.63],[536349.16,6584633.56],
              [536349.85,6584632.12],[536342.93,6584628.84],[536343.08,6584628.54],[536341.63,6584627.87],[536343.73,6584623.48],[536345.16,6584624.16],[536350.03,6584613.9],
              [536350.71,6584612.48],[536360.77,6584617.21],[536361.44,6584615.78],[536369.94,6584619.82],[536369.26,6584621.24],[536382.35,6584627.48],[536377.81,6584637.02],
              [536379.25,6584637.7],[536377.16,6584642.1],[536375.72,6584641.42],[536373.15,6584646.82],[536359.32,6584640.26]]),
    np.array([[536412.13,6584589.48],[536405.52,6584603.17],[536389.15,6584595.26],[536404.4,6584563.69],[536423.73,6584573.03],[536415.1,6584590.91],[536412.13,6584589.48]]),
    np.array([[536819.12,6584204.59],[536809.92,6584199.23],[536809.17,6584200.54],[536800.85,6584195.6],[536801.6,6584194.35],[536798.62,6584192.65],[536805.67,6584180.6],
              [536808.61,6584182.37],[536809.41,6584181.08],[536817.71,6584185.94],[536816.92,6584187.24],[536826.13,6584192.61],[536823.13,6584197.76],[536821.7,6584196.91],
              [536820.7,6584198.63],[536822.12,6584199.47],[536819.12,6584204.59]]),
    np.array([[536831.47,6584182.27],[536839.88,6584167.76],[536855.05,6584176.55],[536854.54,6584177.44],[536859.84,6584180.51],[536851.94,6584194.13],[536831.47,6584182.27]]),
    np.array([[536824.35,6584148.07],[536832.83,6584133.48],[536848.02,6584142.31],[536847.43,6584143.32],[536852.74,6584146.4],[536844.85,6584159.98],[536824.35,6584148.07]]),
    np.array([[537111.36,6584364.14],[537104.2,6584365.82],[537091.84,6584368.71],[537079.87,6584317.56],[537092.23,6584314.67],[537099.39,6584312.99],[537111.36,6584364.14]]),
    np.array([[537048.88,6584316.03],[537061.4,6584318.24],[537052.29,6584369.74],[537039.77,6584367.53],[537032.19,6584366.19],[537041.3,6584314.69],[537048.88,6584316.03]]),
    np.array([[537018.36,6584365.1],[537011.26,6584367.78],[536999.38,6584372.26],[536980.84,6584323.11],[536992.72,6584318.63],[536999.82,6584315.95],[537018.36,6584365.1]]),
    np.array([[537507.24,6585543.77],[537507.15,6585549.96],[537494.75,6585549.77],[537495.79,6585476.45],[537508.21,6585476.63],[537508.11,6585483.15],[537508.1,6585483.99],
              [537508.07,6585485.87],[537507.84,6585502.34],[537507.83,6585502.97],[537507.8,6585505.24],[537507.56,6585521.74],[537507.55,6585522.74],[537507.52,6585524.42],
              [537507.29,6585540.82],[537507.26,6585542.53],[537507.24,6585543.77]]),
    np.array([[537549.6,6585553.11],[537549.51,6585559.35],[537537.06,6585559.16],[537538.13,6585485.87],[537550.58,6585486.05],[537550.48,6585492.65],[537550.48,6585492.7],
              [537550.45,6585494.87],[537550.2,6585511.72],[537550.2,6585512],[537550.16,6585514.87],[537549.93,6585530.52],[537549.92,6585531.4],[537549.88,6585533.53],
              [537549.63,6585550.71],[537549.62,6585551.74],[537549.6,6585553.11]]),
    np.array([[537592.02,6585563.07],[537591.91,6585568.71],[537579.18,6585568.46],[537580.6,6585495.3],[537593.33,6585495.54],[537593.19,6585502.65],[537593.18,6585503.04],
              [537593.15,6585504.88],[537592.82,6585521.61],[537592.8,6585522.67],[537592.78,6585524.06],[537592.45,6585540.68],[537592.42,6585542.2],[537592.4,6585543.54],
              [537592.08,6585559.86],[537592.05,6585561.48],[537592.02,6585563.07]]),
]

building_ehr = [120543544, 120557811, 120815450, 121273086, 121273087, 121273088, 120307684, 120307701, 120307706, 101016325, 101019900, 101016375]

num_buildings = len(buildings)

hausdorff_matrix = np.zeros((num_buildings, num_buildings))

# Compute Hausdorff Distance for each pair of buildings
for i in range(num_buildings):
    for j in range(i + 1, num_buildings): 
        dist_ij = max(directed_hausdorff(buildings[i], buildings[j])[0], directed_hausdorff(buildings[j], buildings[i])[0])
        hausdorff_matrix[i, j] = dist_ij
        hausdorff_matrix[j, i] = dist_ij 

max_hausdorff = np.max(hausdorff_matrix)

# Convert Hausdorff Distance Matrix to Similarity Matrix
similarity_matrix = 1 - (hausdorff_matrix / max_hausdorff)

df_similarity = pd.DataFrame(similarity_matrix, index=building_ehr, columns=building_ehr)


print("\nSimilarity Matrix:")
print(df_similarity.round(4))

